{"version":3,"sources":["js\\vector.js","js\\interpolation.js","js\\circuit.js","js\\main.js"],"names":["Vector","lineDistance","displacement","multiply","divide","add","x","y","vector1","vector2","Math","hypot","vector","divider","Interporation","Vec","path","speed","index","from","to","point","Object","assign","radius","radiusGrow","offset","update","length","draw","context","cellSize","color","lineWidth","beginPath","moveTo","lineTo","strokeStyle","stroke","arc","PI","i","Circuit","setupInterpolations","randomizePaths","POSITION_STATE","EMPTY","BUSY","canvas","pathCount","minPathLength","maxPathLength","straightChance","settings","getContext","width","height","paths","Array","fill","interpolations","collisionBoard","floor","circuit","circuitCopy","map","interpolation","setupInterpolation","random","randomizePath","pathLength","randomizeVector","push","lastVector","setRandomStartPosition","isMovingStraight","isStraightMovePossible","moveStraight","isMovingLeft","isLeftMovePossible","moveLeft","isRightMovePossible","moveRight","emptyIndex","getRandomEmptyIndex","possibleVector","possiblePosition","newVector","array","emptyIndexes","getEmptyIndexes","value","Cir","$","document","ready","createCanvas","loop","requestAnimationFrame","clearRect","win","window","allMods","each","element","el","discovered","addClass","scroll","event","fetch","method","headers","body","JSON","stringify","query","then","res","json","console","log","data","card","recentRepository","user","repositories","nodes","lastUpdate","Date","pushedAt","stack","languages","language","name","find","text","toISOString","substring","join","description","attr","children","hide","removeClass","catch","error","id","target","createElement","innerWidth","innerHeight","append"],"mappings":";;;;;;QACgBA,SAAAA;QASAC,eAAAA;QCRAa,ADYAZ,eAAAA,CCZAY;AEFhB,QHkBgBX,WAAAA;AClBhB,QCSgBuC,AFaAtC,SAAAA,CEbAsC;ICTJkD,IDiCIjD,AFPAtC,MAAAA,gBEOAsC;AFjChB,ICAY5B,IC8CI6B,iBAAAA;AF7CT,QE0LSjB,CF1LA3B,MAAT,EE0LS2B,CF1LqB;AAAA,QEgMrBE,AFhMOvB,CAAc,MEgMrBuB,iEFhMW,CAAU;AGCrCgE,AHDqC,EGCnCC,MHD4BvF,CAAO,CGCrC,EAAYwF,KAAZ,CAAkB,YAAW,kDHDK,CAAG;AEDrC,ADEO,AECH,QAAI/C,CFDQlC,QECCkF,KFDV,CAAuBhF,IAAvB,EAAkD,CEC3B,QAAb,EAAuB,SAAvB,CAAb;AFDqD,AEErD,AHFA,QGEIc,GHFG,OGEOkB,OAAOM,UAAP,CAAkB,IAAlB,CAAd,0CFFiD,EAAI;AAAA,AEGrD,AHFIhD,IEHIS,ICKJgD,GHFGzD,CADA,MGGOsF,IAAIlD,IFHgBzB,GEGpB,CAAY+B,CFH2B,KEGvC,CAAd;AFHqD,ADEjDzC,QCF8BU,GDE3BV,ECF8C,8BAAX,EAAW;ACDzD,ACMIwD,AHLO,KAAP,SGKU6B,IAAIhD,cAAJ,CAAmBmB,OAAnB,CAAV;AFJA,AEKAA,AHFH,QCHO7D,MEKM0F,IAAIjD,KFLK,IAAnB,UEKU,CAAwBoB,OAAxB,CAAV;AFJA,QAAG/C,KAAK,CAAL,CAAH,EACId,eAAea,IAAIb,YAAJ,CAAiBc,KAAK,CAAL,CAAjB,EAA0BA,KAAK,CAAL,CAA1B,CAAf,CADJ,KAGId,eAAea,IAAIf,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAf;AEGJiG,AHFJ;AELA,ADMI,WAAO;ACLX,ADMQjF,AEEJ,AHFG,IEND6B,KFMU5C,IGEHgG,IAAT,CFHO,EEGS,CDRG,AFMhB,CAAsBzF,OAAtB,EAA+BC,OAA/B,EAAwC;AEL3CqC,ADMI7B,AEEAiF,AHFJ,WENO,AFMAxF,CEPY,IFOPC,ICFL,CDEA,CAAWF,QGEQwF,AHFA3F,CAAR,GGEd,AHF0BE,QAAQF,CAA/B,EAAkCG,QAAQF,CAAR,GAAYC,QAAQD,CAAtD,CAAP;AELAwC,ADMI7C,ADAP,UENS,wBDGC;ACLY,ADSfgB,AEEAY,CDXR,cDSe,CAJJ,AEMKqE,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwBnD,OAAOO,KAA/B,EAAsCP,OAAOQ,MAA7C;AFDArC,AEEAyE,AHFD,SAAS1F,GGEJyB,EFFEX,IEEN,CFFW,AEEA+C,CFFL,CALH,ADKJ,CAAsBvD,IGErB,GHFD,EAA+BC,OAA/B,EAAwC;AELxC,ADMCW,AEEAwE,AHFJ,SENYlD,EFML1C,CCACgB,AEEAa,IDRL,ACQC,CDRgBmB,ADMP,AEEAe,CFFL,ADAMvD,KENX,ADMgB,CEEf,CDR8H,CFM5GF,CCNf,ADMO,GAAYG,QAAQH,CAA3B,EAA8BE,QAAQD,CAAR,GAAYE,QAAQF,CAAlD,CAAP;AENkI,ADO9Hc,AEEH,AHFJ,eCAcC,OAAOC,MAAP,CAAc,EAAd,EAAkBP,KAAK,CAAL,CAAlB,CAPJ,0CCAuH,EAAI;AAAA,ADQ9HQ,gBAAQ,GARL,UCAuBO,QAAoG;AAAA,ADS9HN,AEEJ,AHFG,QET2BM,ACW1BqE,CHFQjG,KGEF0F,EDXwH,ACWtHQ,CHFT,CAAkB7F,ECAL,EEEN,CAAV,CFXO,CDSJ,EAA2BC,OAA3B,EAAoC,aETE,EAAyF;AAAA,ADU9HiB,AEEJ,AHFA,QGEI4E,GHFGtG,KCAKe,EEEE8E,AHFArF,ECAER,AEEA,MFFJ,ADAUM,CCCdW,ADDM,CGEA,CAAd,CDZ6CgC,AFUnBxC,KCCV,GDDkBH,CEVgG,AFU3H,CCCC,CDD6BE,ECCbN,MDDqBK,CAAR,GAAYE,GCCZH,CADzB,EAEJW,EDFiDV,CAAlD,CAAP,ICEgB,KAAR,GAAgBL,aAAaK,CAFzB,CAVL;ACA2H,ADc9HoB,ADHP,QEXgDsB,MDAtC,GCA2H,iBDcrH,iBCd4C,GAAyE;AAAA,ADe1H,AEDR,gBFCW,KAAK7B,EAAL,IAAW,IAAd,EAAoB,CCfkC8B,aAAoE;AAAA,ADgBtH,AEDZoD,AHFG,QEb2DpD,CFalD9C,GGEJmG,GHFL,CGEH,AHFmB3F,CGEN,GFCE,CChBmH,CFa/H,EAAwBC,CCGPY,EEDEgB,CAAT,EAAY+D,CHFtB,EAAiC,ECGxB,EAAoB,AEDnB,EAAqB,oBDf4C,EAAoD;AAAA,ADiBlH,AEDZ,AHFJ,WAAOxG,CGECyG,KAAKZ,CHFCjF,CGEC4F,MFCMhF,ADHAlB,CGER,AHFC,CGEV,EHFqBO,ECGT,GCjBkEsC,CDiBnD,CDHxB,ECGS,ADHkBvC,OAAOL,CAAP,CEdgG,EFcrFM,OAAtC,CAAP;AEdkI,ACiB9H,AHFP,QEfqFsC,ICiB1EsD,GAAGC,MDjBuH,ICiB1H,EAAJ,EAAqB,8BDjByE,EAAgC;AAAA,ADmBlH,AEDRD,eAAGE,QAAH,CFCW,AEDC,KFCInF,MCnB8E4B,ADmBnF,IAAe,CAAlB,CEDR,CFC6B,OCnB6F;AAAA,ADoB9G,AEDf,AHFF,QEjBmGA,CFiB1F/C,GAAT,CAAaG,OAAb,EEjB+H,AFiBzGC,OCGAe,ADHtB,EAA+B,ICGd,GAAc,CAAd,sBCpBmG,EAAW;ADqB9G,AEDnB,AHFD,KGHA,MHGOxB,OAAOQ,QAAQF,CAAR,ECGWmB,CDHChB,QAAQH,CCGd,ADHb,EAA8BE,CCGC,KAAlB,EDHyBD,CAAR,GAAYE,QAAQF,CAAlD,CAAP;AEjBA,ADqBiB,ADHpB,WElBU;AACHyC,ADqBS,AEDboD,QAAIQ,MAAJ,CAAW,EFNC,KCfL,CDuBU,EEFGC,KAAT,EAAgB;ADnBvBxD,ADsBY,AEFZiD,gBAAQC,EDpBE,ECoBV,CAAa,IFEI/E,MAAL,AEFUiB,CAAT,EAAY+D,CFEE,GAAf,GEFC,EAAqB;ADnB9BzE,ACoBA,gBAAI0E,KAAKZ,EAAEW,ODrBL,ACqBG,CAAT;ADnBAvD,ADsBQ,AEFR,gBAAIwD,GAAGC,KFEI,KAAKlF,AEFZ,CAAc,EDtBZ,ECsBF,CFEO,AEFX,EAAyB,EFEC,CAAlB,EAAqB;ACrB7B0B,ADsBY,AEFRuD,mBAAGE,QAAH,CAAY,CFECnF,MAAL,EEFR,CFEsB,CAAd,CCzBN;AAIN2B,ADsBY,AEFX,6BFEgB1B,UAAL,CC1BN,ED0BwB,IAAlB;ACrBZ2B,ADsBS,AEFZ,SALD;ADpBU,AD4BD,AEDZ,KARD,IDrBO;AASHtB,iBAASkB,OAAOM,UAAP,CAAkB,IAAlB,CATN;AAUHC,ADsBQ,AEDZsC,MAAEQ,MAAF,EAAUO,CDrBC5D,KCqBX,CAAiB,CDrBCO,KAVX,IC+BmBsD,KAAT,EAAgB;ADpB7BrD,ADsBK,AEDLqC,UAAE,MDrBM7C,ECqBR,EAAYuD,GDrBG/C,CCqBf,CAAiB,IDhCd,MCgCuBf,CAAT,EAAY+D,OAAZ,EAAqB;ADpBtC/C,ACqBI,eDrBG,CCqBCgD,GDrBG/C,ECqBEmC,EAAEW,CDrBR,CAAUvD,KCqBJ,CAAT,GDrBG,EAAqBU,IAArB,CAA0B,EAA1B,CAZJ;AAaHC,ADsBI,AEDA,gBAAI6C,CFCCpF,EEDEqF,GFCP,ECtBY,CDsBC3F,GCtBG2C,CDsBCrD,AEDb,CAAc,EFCL,CCtBD,ADsBS,CCtBC4C,ACqBlB,CAAJ,EAAyB,CFCC5B,KCtBd,ADsBC,ECtBoBsC,ADsBA,ICtBrB,CAA0B,ADsBAjC,ECtB1B,CAbb,GDmCc,CAAb;ACrBJmC,ACqBQ4C,mBAAGE,KDrBKjD,GCqBR,CAAY,EDrBEvC,IAAN,CACZuC,ECoBI,IDpBEhD,KAAKoD,KAAL,CAAWd,OAAOO,KAAP,GAAaxB,QAAxB,CAAN,CADY,EAEZ;AAAA,ADqBA,AEDC,gBFCEhB,GCrBG,CDqBCd,GCrBGyD,KAAJ,CAAUhD,GDqBb,CAAiB,CCrBCoD,IDqBIzC,CCrBT,CAAW2B,GDqBxB,EAA6B,ECrBEQ,GDqBGpC,EAAlC,CCrBwB,GAAcW,ADqBEhB,IAAId,ICrB/B,CAAV,EAA8C0D,IAA9C,CAAmDd,ADqBd,CAAiB9B,IAAIf,MAAJ,CAAW,CAAX,ECrBY8C,ADqBE,CAAd,CAAjB,EAAmC,CCrBxE,CAAN,GDqBmFpB,MAAxC,CAA3C,EAA4F;ACrB5F,ADsBI,AEDP,SDvBe,ACkBhB,YFMaL,KAAL,GAAaN,IAAIf,MAAJ,CAAW,KAAKoB,EAAL,CAAQd,CAAnB,EAAsB,KAAKc,EAAL,CAAQb,CAA9B,CAAb;ACtCL,ADuCK,AEDX,KDtCD,AC+BA,gBFQiBY,IAAL,GAAY,KAAKC,EAAjB;ACpBf,ACqBA,CAhDD;AFiDgB,qBAAKF,KAAL;ACpBhB,ADqBgB,AEAhB4F,MAAM,cFAa,KAAK9F,IAAL,CAAUY,MAA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","file":"main.43aceaaa.map","sourceRoot":"..","sourcesContent":["//Data\nexport function Vector(x = 0, y = 0) {\n    return {\n        x: x,\n        y: y\n    };\n}\n\n//Functions\n\nexport function lineDistance(vector1, vector2) {\n    return Math.hypot(vector2.x - vector1.x, vector2.y - vector1.y);\n}\n\nexport function displacement(vector1, vector2) {\n    return Vector(vector1.x - vector2.x, vector1.y - vector2.y);\n}\n\nexport function multiply(vector1, vector2) {\n    return Vector(vector1.x * vector2.x, vector1.y * vector2.y);\n}\n\nexport function divide(vector, divider) {\n    return Vector(vector.x / divider, vector.y / divider);\n}\n\nexport function add(vector1, vector2) {\n    return Vector(vector1.x + vector2.x, vector1.y + vector2.y);\n}\n","import * as Vec from './vector.js';\n\nexport function Interporation(path, { speed = 10 } = {}) {\n    let displacement = null;\n    if(path[1])\n        displacement = Vec.displacement(path[1], path[0]);\n    else\n        displacement = Vec.Vector(0, 0);\n\n    return {\n        path,\n        speed,\n        displacement,\n        index: 1,\n        from: path[0],\n        to: path[1] || null,\n        point: Object.assign({}, path[0]),\n        radius: 0.5,\n        radiusGrow: true,\n        offset: Vec.Vector(\n            speed / 100.0 * displacement.x,\n            speed / 100.0 * displacement.y\n        ),\n        update() {\n            if(this.to == null) {\n                if(this.radiusGrow) {\n                    this.radius += 0.1;\n\n                    if(this.radius >= 3) {\n                        this.radius = 3;\n                        this.radiusGrow = false;\n                    }\n                }\n                else {\n                    this.radius -= 0.1;\n\n                    if(this.radius <= 0) {\n                        this.radius = 0;\n                        this.radiusGrow = true;\n                    }\n                }\n\n                return;\n            }\n\n            this.point = Vec.add(this.point, this.offset);\n\n            if(Vec.lineDistance(this.point, this.to) < Vec.lineDistance(Vec.Vector(0, 0), this.offset)) {\n                this.point = Vec.Vector(this.to.x, this.to.y);\n                this.from = this.to;\n        \n                this.index++;\n                if(this.path.length >= this.index + 1) {\n                    this.to = this.path[this.index];\n        \n                    this.displacement = Vec.displacement(this.to, this.from);\n                    this.offset = Vec.Vector(\n                        this.speed / 100.0 * this.displacement.x,\n                        this.speed / 100.0 * this.displacement.y\n                    );\n        \n                }\n                else\n                    this.to = null;\n            }\n        },\n        draw(context, { cellSize = 10, color = '#f9dc5c', lineWidth = 2 } = {}) {\n            if(this.to != null) {\n                context.beginPath();\n                context.moveTo(this.from.x * cellSize, this.from.y * cellSize);\n                context.lineTo(this.point.x * cellSize, this.point.y * cellSize);\n                context.lineWidth = lineWidth;\n                context.strokeStyle = color;\n                context.stroke();\n            } else {\n                let point = this.path[this.path.length - 1];\n\n                context.beginPath();\n                context.arc(point.x * cellSize, point.y * cellSize, this.radius, 0, 2 * Math.PI);\n                context.stroke();\n            }\n\n            for(let i=0; i<this.index-1; i++) {\n                context.beginPath();\n                context.moveTo(this.path[i].x * cellSize, this.path[i].y * cellSize);\n                context.lineTo(this.path[i+1].x * cellSize, this.path[i+1].y * cellSize);\n                context.lineWidth = lineWidth;\n                context.strokeStyle = color;\n                context.stroke();\n\n            }\n        }\n    };\n}","import * as Vec from './vector.js';\nimport { Interporation } from './interpolation.js';\n\n//Data\nconst POSITION_STATE = {\n    EMPTY: 0,\n    BUSY: 1\n};\n\nexport function Circuit(canvas, { cellSize = 10, pathCount = 100, minPathLength = 20, maxPathLength = 35, straightChance = 96 } = {}) {\n    return {\n        canvas,\n        settings: {\n            cellSize,\n            pathCount,\n            minPathLength,\n            maxPathLength,\n            straightChance\n        },\n        context: canvas.getContext('2d'),\n        width: canvas.width,\n        height: canvas.height,\n        paths: new Array(pathCount).fill([]),\n        interpolations: new Array(pathCount).fill({}),\n        collisionBoard: Array.from(\n            Array(Math.floor(canvas.width/cellSize)), \n            () => new Array(Math.floor(canvas.height/cellSize)).fill(POSITION_STATE.EMPTY)\n        )\n    };\n}\n\n//Functions\n\nexport function setupInterpolations(circuit) {\n    let circuitCopy = Object.assign({}, circuit);\n    circuitCopy.interpolations = circuitCopy.interpolations.map((interpolation, index) => {\n        return setupInterpolation(circuit.paths[index]);\n    });\n\n    return circuitCopy;\n}\n\nfunction setupInterpolation(path) {\n    return Interporation(path, { speed: Math.floor(Math.random() * 20 + 10) });\n}\n\nexport function randomizePaths(circuit) {\n    let circuitCopy = Object.assign({}, circuit);\n\n    circuitCopy.paths = circuitCopy.paths.map(() => {\n        return randomizePath(circuitCopy.collisionBoard, circuitCopy.settings);\n    });\n    \n    return circuitCopy;\n}\n\nfunction randomizePath(collisionBoard, settings) {\n    let pathLength = Math.floor(Math.random() * (settings.maxPathLength - settings.minPathLength)) + settings.minPathLength;\n    let path = [];\n\n    for(let i=0; i<pathLength; i++) {\n        let vector = randomizeVector(\n            collisionBoard,\n            settings,\n            (i > 0) ? path[i - 1]: null \n        );\n\n        if(vector != null)\n            path.push(vector);\n        else\n            break;\n    }\n\n    return path;\n}\n\nfunction randomizeVector(collisionBoard, settings, lastVector = null) {\n    let vector = null;\n\n    if(lastVector == null) \n        vector = setRandomStartPosition(collisionBoard);\n    else {\n        if(isMovingStraight(settings)) {\n            if(isStraightMovePossible(collisionBoard, lastVector))\n                vector = moveStraight(collisionBoard, lastVector);\n        } else {\n            if(isMovingLeft()) {\n                if(isLeftMovePossible(collisionBoard, lastVector))\n                    vector = moveLeft(collisionBoard, lastVector);\n            } else {\n                if(isRightMovePossible(collisionBoard, lastVector))\n                    vector = moveRight(collisionBoard, lastVector);\n            }\n        }\n\n    }\n\n    return vector;\n}\n\nfunction setRandomStartPosition(collisionBoard) {\n    let emptyIndex = getRandomEmptyIndex(collisionBoard.map(x => x[0]));\n    let vector = Vec.Vector(emptyIndex, 0);\n    collisionBoard[vector.x][vector.y] = POSITION_STATE.BUSY;\n\n    return vector;\n}\n\nfunction isMovingStraight(settings) {\n    return (Math.floor(Math.random() * 100) < settings.straightChance) ? true : false;\n}\n\nfunction isMovingLeft() {\n    return (Math.floor(Math.random() * 2) < 1) ? true : false;\n}\n\nfunction isStraightMovePossible(collisionBoard, lastVector) {\n    let possibleVector = Vec.Vector(lastVector.x, lastVector.y + 1);\n\n    if(possibleVector.y < collisionBoard[0].length)\n        if(collisionBoard[possibleVector.x][possibleVector.y] === POSITION_STATE.EMPTY)\n            return true;\n\n    return false;\n}\n\nfunction isLeftMovePossible(collisionBoard, lastVector) {\n    let possiblePosition = Vec.Vector(lastVector.x - 1, lastVector.y + 1);\n\n    if(possiblePosition.x >= 0 && possiblePosition.y < collisionBoard[0].length) {\n        if(collisionBoard[possiblePosition.x][possiblePosition.y] === POSITION_STATE.EMPTY &&\n           collisionBoard[possiblePosition.x + 1][possiblePosition.y] === POSITION_STATE.EMPTY)\n            return true;\n    }\n    \n    return false;\n}\n\nfunction isRightMovePossible(collisionBoard, lastVector) {\n    let possiblePosition = Vec.Vector(lastVector.x + 1, lastVector.y + 1);\n\n    if(possiblePosition.x < collisionBoard.length && possiblePosition.y < collisionBoard[0].length) {\n        if(collisionBoard[possiblePosition.x][possiblePosition.y] === POSITION_STATE.EMPTY &&\n           collisionBoard[possiblePosition.x - 1][possiblePosition.y] === POSITION_STATE.EMPTY)\n            return true;\n    }\n    \n    return false;\n}\n\nfunction moveStraight(collisionBoard, lastVector) {\n    let newVector = Vec.Vector(lastVector.x, lastVector.y + 1);\n    collisionBoard[newVector.x][newVector.y] = POSITION_STATE.BUSY;\n\n    return newVector;\n}\n\nfunction moveLeft(collisionBoard, lastVector) {\n    let newVector = Vec.Vector(lastVector.x - 1, lastVector.y + 1);\n    collisionBoard[newVector.x][newVector.y] = POSITION_STATE.BUSY;\n\n    return newVector;\n}\n\nfunction moveRight(collisionBoard, lastVector) {\n    let newVector = Vec.Vector(lastVector.x + 1, lastVector.y + 1);\n    collisionBoard[newVector.x][newVector.y] = POSITION_STATE.BUSY;\n\n    return newVector;\n}\n\nfunction getRandomEmptyIndex(array) {\n    let emptyIndexes = getEmptyIndexes(array);\n    return emptyIndexes[Math.floor(Math.random() * emptyIndexes.length)];\n}\n\nfunction getEmptyIndexes(array) {\n    let emptyIndexes = [];\n    \n    array.map((value, index) => {\n        if(value === POSITION_STATE.EMPTY)\n            emptyIndexes.push(index);\n    });\n\n    return emptyIndexes;\n}\n\nexport function update(circuit) {\n    for(let i=0; i<circuit.interpolations.length; i++) {\n        circuit.interpolations[i].update();\n    }\n}\n\nexport function draw(circuit) {\n    for(let i=0; i<circuit.interpolations.length; i++) {\n        circuit.interpolations[i].draw(circuit.context, { cellSize: circuit.settings.cellSize });\n    }\n}","import * as Cir from './circuit';\n\n$(document).ready(function() {\n    let canvas = createCanvas('screen', '#target');\n    let context = canvas.getContext('2d');\n    let circuit = Cir.Circuit(canvas);\n\n    circuit = Cir.randomizePaths(circuit);\n    circuit = Cir.setupInterpolations(circuit);\n\n    loop();\n\n    function loop() {\n        requestAnimationFrame(loop);\n    \n        context.clearRect(0, 0, canvas.width, canvas.height);\n        Cir.update(circuit);\n        Cir.draw(circuit);\n    }\n\n    var win = $(window);\n    var allMods = $('.slide');\n\n    // Already visible modules\n    allMods.each(function(i, element) {\n        let el = $(element);\n        if (el.discovered()) {\n            el.addClass('already-visible'); \n        } \n    });\n\n    win.scroll(function(event) {\n        allMods.each(function(i, element) {\n            let el = $(element);\n            if (el.discovered(true)) {\n                el.addClass('come-in'); \n            } \n        });\n    \n    });\n\n    $(window).scroll(function(event) {\n        $('.slide').each(function(i, element) {\n            let el = $(element);\n            if (el.discovered(true)) {\n                el.addClass('come-in'); \n            } \n        });\n    });\n    \n});\n\nfetch('https://api.github.com/graphql', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json', 'Authorization': 'bearer 7f249d17e6a63de60326527e013909682bc30f82' },\n    body: JSON.stringify({ query: \n        `{\n            user(login: \"Anwarus\") {\n                repositories(first: 1, orderBy: {field: PUSHED_AT, direction: DESC}) {\n                    nodes {\n                        name\n                        pushedAt\n                        description\n                        languages(first: 10) {\n                            nodes {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }`\n    }),\n})\n    .then(res => res.json())\n    .then(res => {\n        console.log(res.data);\n\n        let card = $('.card-github');\n        let recentRepository = res.data.user.repositories.nodes[0];\n        let lastUpdate = new Date(recentRepository.pushedAt);\n        let stack = (recentRepository.languages.nodes).map(language => language.name);\n\n        $(card).find('.github-date').text(lastUpdate.toISOString().substring(0, 10));\n        $(card).find('.github-stack').text(stack.join('/'));\n        $(card).find('.github-title').text(recentRepository.name);\n        $(card).find('.github-description').text(recentRepository.description);\n\n        $(card).find('.github-button.start').attr('href', 'https://github.com/Anwarus/' + recentRepository.name + '/subscription');\n        $(card).find('.github-button.start').attr('href', 'https://github.com/Anwarus/' + recentRepository.name);\n        $(card).find('.github-button.start').attr('href', 'https://github.com/Anwarus/' + recentRepository.name + '/fork');\n\n        $(card).children('.loader').hide();\n        $(card).children('.content').removeClass('hidden');\n    })\n    .catch(error => {\n        console.log(\"Error: \", error);\n\n        let card = $('.card-github');\n\n        $(card).children('.loader').hide();\n        $(card).children('.error').removeClass('hidden');\n    });\n\nfunction createCanvas(id, target) {\n    let canvas = document.createElement('canvas');\n\n    canvas.id = id;\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight * (4/10);\n\n    $(target).append(canvas);\n\n    return canvas;\n}"]}