{"version":3,"sources":["js\\vector.js","js\\interpolation.js","js\\circuit.js","js\\main.js"],"names":["Vector","lineDistance","displacement","multiply","divide","add","x","y","vector1","vector2","Math","hypot","vector","divider","Interporation","Vec","path","speed","index","from","to","point","Object","assign","radius","radiusGrow","offset","update","length","draw","context","cellSize","color","lineWidth","beginPath","moveTo","lineTo","strokeStyle","stroke","arc","PI","i","Circuit","setupInterpolations","randomizePaths","POSITION_STATE","EMPTY","BUSY","canvas","pathCount","minPathLength","maxPathLength","straightChance","settings","getContext","width","height","paths","Array","fill","interpolations","collisionBoard","floor","circuit","circuitCopy","map","interpolation","setupInterpolation","random","randomizePath","pathLength","randomizeVector","push","lastVector","setRandomStartPosition","isMovingStraight","isStraightMovePossible","moveStraight","isMovingLeft","isLeftMovePossible","moveLeft","isRightMovePossible","moveRight","emptyIndex","getRandomEmptyIndex","possibleVector","possiblePosition","newVector","array","emptyIndexes","getEmptyIndexes","value","Cir","$","document","ready","createCanvas","loop","requestAnimationFrame","clearRect","win","window","allMods","each","element","el","discovered","addClass","scroll","event","resize","innerWidth","innerHeight","fetch","method","headers","body","JSON","stringify","query","then","res","json","card","recentRepository","data","user","repositories","nodes","lastUpdate","Date","pushedAt","stack","languages","language","name","find","text","toISOString","substring","join","description","attr","children","hide","removeClass","catch","id","target","createElement","append"],"mappings":";;;;;;QACgBA,SAAAA;QASAC,eAAAA;QCRAa,ADYAZ,eAAAA,CCZAY;AEFhB,QHkBgBX,WAAAA;AClBhB,QCSgBuC,AFaAtC,SAAAA,CEbAsC;ICTJkD,IDiCIjD,AFPAtC,MAAAA,gBEOAsC;AFjChB,ICAY5B,IC8CI6B,iBAAAA;AF7CT,QE0LSjB,CF1LA3B,MAAT,EE0LS2B,CF1LqB;AAAA,QEgMrBE,AFhMOvB,CAAc,MEgMrBuB,iEFhMW,CAAU;AGCrCgE,AHDqC,EGCnCC,MHD4BvF,CAAO,CGCrC,EAAYwF,KAAZ,CAAkB,YAAW,kDHDK,CAAG;AEDrC,ADEO,AECH,QAAIxC,CFDQzC,OECA+E,EAAEC,IFDX,CAAuB9E,GECd,CFDT,CECqBuC,CFD6B,IECzC,EAAZ;AFDqD,AEErD,AHFA,QGEIC,GHFG,MGEMqC,EAAEC,QAAF,EAAYtC,MAAZ,EAAb,8CFFiD,EAAI;AAAA,ADCjDlD,IEHIS,OFGDT,CADA,cCA2BW,KAAmB;AAAA,AEIrD,AHFIV,QCF8BU,AEI9B+B,GHFGzC,ECF8C,IEIxCyF,aAAa,QAAb,EAAuB,GFJM,EAAW,IEIxC,CAAb;ADLJ,ACMI,AHLO,KAAP,GGKIlE,UAAUkB,OAAOM,UAAP,CAAkB,IAAlB,CAAd;AFJA,AEKA,AHFH,QCHOpD,AEKA6B,WAAW,EAAf,EFLmB,IAAnB;AACA,AEKA,QFLGf,AEKC+C,KFLI,CAAL,CAAH,EACI7D,CEIU0F,IAAIlD,OAAJ,CAAYM,EFJPjC,IAAIb,AEIT,EACV,UFLe,CAAiBc,KAAK,CAAL,CAAjB,EAA0BA,KAAK,CAAL,CAA1B,CAAf,CADJ,KAGId,eAAea,IAAIf,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAf;AEII+B,AHHZ,kBGGsBA,QADd;ADPR,ADMI,AEGQkB,WFHD,QEGYvC,KAAKoD,KAAL,CAAWd,OAAOO,KAAP,GAAaxB,QAAb,GAAwB,CAAxB,GAA0B,GAArC,CAFf;ADNR,ADMQf,AEGIkC,AHHL,IENDL,KFMU5C,SCDL,GCLY,AFMhB,CAAsBO,CGGFE,KAAKoD,CHHzB,EAA+BrD,EGGX,CAAWuC,IHH/B,EAAwC,CGGFQ,MAAP,GAAczB,QAAd,GAAyB,CAAzB,GAA2B,GAAtC,CAHnB;ADLJe,ADMI7B,AEGIkC,AHHR,WENO,AFMAzC,CEPY,IFOPC,ICFL,CDEA,CAAWF,CGGKC,KAAKoD,EHHFxD,CAAR,EGGK,CAAW0C,AHHJxC,OGGWgD,CHHHlD,CAA/B,EAAkCG,EGGP,GAAcsB,GHHCxB,CAAR,GAAYC,CGG9B,OHHsCD,CAAtD,CAAP;AELAwC,ADMI7C,AEFA,AHEP,KGHiB,CAAd,IDHM,wBDGC;ACLY,ADSfgB,CCTR,cDSe,CAJJ;AAKHC,AEIJ4C,AHJG,SAAS7D,KCAFc,AEIA4E,IAAIhD,CFJC,CAAL,CALH,ADKJ,CAAsBpC,OAAtB,EAA+BC,CGIxB,CAAmBsD,KHJ1B,EGIO,AHJiC,CGI3C;ADTG,ADMC3C,AEIJ2C,AHJA,SENYrB,EFML1C,CCACgB,EEIE4E,EDVP,CAAiB5C,ADMP,CAAL,AEIML,AHJAnC,KENX,ADMgB,ECN+G,CFM5GF,CCNf,ADMO,GAAYG,OGIhB,CAAwBsD,AHJAzD,CAA3B,EAA8BE,IGI3B,CAAV,GHJ6CD,CAAR,GAAYE,QAAQF,CAAlD,CAAP;AENkI,ADO9Hc,ADAP,eCAcC,OAAOC,MAAP,CAAc,EAAd,EAAkBP,KAAK,CAAL,CAAlB,CAPJ,0CCAuH,EAAI;AAAA,ADQ9HQ,AEIJyE,gBFJY,GARL,UCAuBlE,QAAoG;AAAA,ADS9HN,ADAD,QET2BM,CFSlB5B,OETsH,CFS/H,CAAkBK,ECAL,IATT,CDSJ,EAA2BC,OAA3B,EAAoC,aETE,EAAyF;AAAA,ADU9HiB,AEIJ,AHJA,WAAO1B,EGIEiG,GFJGlF,CEIZ,CHJcP,ECAER,AEIA,MFJJ,ADAUM,CCCdW,ADDM,GEV+BgC,AFUnBxC,KCCV,GDDkBH,CEVgG,AFU3H,CCCC,CDD6BE,ECCbN,MDDqBK,CAAR,GAAYE,GCCZH,CADzB,EAEJW,EDFiDV,CAAlD,CAAP,ICEgB,KAAR,GAAgBL,aAAaK,CAFzB,CAVL;ACA2H,ADc9HoB,AECAuE,AHJP,QEXgDjD,MDAtC,GCA2H,aCexGgD,IFDb,AECT,iBDfqD,GAAyE;AAAA,ADe1H,gBAAG,KAAK7E,EAAL,IAAW,IAAd,EAAoB,CCfkC8B,aAAoE;AAAA,ADgBtH,AECRpB,AHJD,QEb2DoB,CFalD9C,MAAT,CGIS+F,AHJOvF,ICGJ,CChBmH,CFa/H,EAAwBC,CCGPY,AEChB,CAAkB,CAAlB,EAAqB,CAArB,CHJD,CGIyBuB,CHJQ,ECGxB,EAAoB,EECGO,KAA/B,EAAsCP,OAAOQ,MDjB6B,ACiB1E,EDjB8H;AAAA,ADiBlH,AECZoC,AHJJ,WAAO5F,CGIC2B,MAAJ,AHJUf,CGICmD,MFDMvC,ADHAlB,CGIjB,AHJU,GAAWO,ECGT,GCjBkEsC,CDiBnD,CDHxB,ECGS,ADHkBvC,OAAOL,CAAP,CEdgG,EFcrFM,OAAtC,CAAP;AEdkI,ACmB9H+E,AHJP,QEfqFzC,ICmB1EtB,IAAJ,CAASkC,IDnBqH,GCmB9H,mCDnB8F,EAAgC;AAAA,ADmBlH,AECf,wBFDkB,KAAKvC,MCnB8E4B,ADmBnF,IAAe,CAAlB,EAAqB,OCnB6F;AAAA,ADoB9G,ADHjB,QEjBmGA,CFiB1F/C,GAAT,CAAaG,OAAb,EEjB+H,AFiBzGC,OCGAe,ADHtB,EAA+B,ICGd,GAAc,CAAd,sBCpBmG,EAAW;ADqB9G,AECpB,AHJA,QGII4E,GHJGpG,GGIG6F,EAAEQ,EHJE7F,IGIJ,CAAV,GHJsBF,CAAR,ECGWmB,CDHChB,QAAQH,CCGd,ADHb,EAA8BE,CCGC,KAAlB,EDHyBD,CAAR,GAAYE,QAAQF,CAAlD,CAAP;AEjBA,ADqBiB,AECjB,AHJH,QGIO+F,GDtBG,OCsBOT,EAAE,QAAF,CAAd;ADrBI7C,ADqBS,iBAPD,KCfL,CDuBU;ACrBbK,ADsBY,AEAhB,kBDtBc,ODsBO7B,MAAL,IAAe,GAAf;ACrBRO,ACsBRuE,YAAQC,IAAR,CAAa,UAAS9D,CAAT,EDvBC,ACuBW+D,OAAZ,EAAqB;ADrB1BvD,ADsBQ,AEAZ,YAAIwD,KAAKZ,EAAEW,KFAI,EEAN,CAAT,EFAoBhF,GCxBV,GDwBK,IAAe,CAAlB,EAAqB;ACrB7B0B,ADsBY,AEAhB,YAAIuD,GAAGC,UAAH,EAAJ,EFAqBlF,AEAA,MFAL,GAAc,CAAd,CCzBN;AAIN2B,ADsBY,AEAZsD,eAAGE,QAAH,CAAY,KFAKlF,UAAL,CC1BN,CC0BN,CFA8B,IAAlB;ACrBZ2B,ADsBS,AEAZ;AD3BS,AD4BD,AEAZ,KALD,IDzBO;AASHtB,iBAASkB,OAAOM,UAAP,CAAkB,IAAlB,CATN;AAUHC,ADsBQ,AEAZ6C,QAAIQ,MAAJ,CDtBW5D,ACsBA,ODtBOO,GCsBEsD,EDhCb,GCgCI,EAAgB;ADrBvBrD,ADsBK,AEAL8C,gBDtBQtD,ACsBAuD,IAAR,CAAa,EDtBE/C,MAXZ,ECiCmBf,CAAT,EAAY+D,OAAZ,EAAqB;ADrBlC/C,ACsBI,eDtBG,CCsBCgD,GDtBG/C,ECsBEmC,EAAEW,CDtBR,CAAUvD,KCsBJ,CAAT,GDtBG,EAAqBU,IAArB,CAA0B,EAA1B,CAZJ;AAaHC,ADsBI,AEAA,gBAAI6C,CFACpF,EEAEqF,GFAP,ECtBY,CDsBC3F,GCtBG2C,CDsBCrD,AEAb,CAAc,EFAL,CCtBD,ADsBS,CCtBC4C,ACsBlB,CAAJ,EAAyB,CFAC5B,KCtBd,ADsBC,ECtBoBsC,ADsBA,ICtBrB,CAA0B,ADsBAjC,ECtB1B,CAbb,GDmCc,CAAb;ACrBJmC,ACsBQ4C,mBAAGE,KDtBKjD,GCsBR,CAAY,EDtBEvC,IAAN,CACZuC,ECqBI,IDrBEhD,KAAKoD,KAAL,CAAWd,OAAOO,KAAP,GAAaxB,QAAxB,CAAN,CADY,EAEZ;AAAA,ADqBA,AEAC,gBFAEhB,GCrBG,CDqBCd,GCrBGyD,KAAJ,CAAUhD,GDqBb,CAAiB,CCrBCoD,IDqBIzC,CCrBT,CAAW2B,GDqBxB,EAA6B,ECrBEQ,GDqBGpC,EAAlC,CCrBwB,GAAcW,ADqBEhB,IAAId,ICrB/B,CAAV,EAA8C0D,IAA9C,CAAmDd,ADqBd,CAAiB9B,IAAIf,MAAJ,CAAW,CAAX,ECrBY8C,ADqBE,CAAd,CAAjB,EAAmC,CCrBxE,CAAN,GDqBmFpB,MAAxC,CAA3C,EAA4F;ACrB5F,ADsBI,AEAP,SDxBe,ACmBhB,YFKaL,KAAL,GAAaN,IAAIf,MAAJ,CAAW,KAAKoB,EAAL,CAAQd,CAAnB,EAAsB,KAAKc,EAAL,CAAQb,CAA9B,CAAb;ACtCL,ADuCK,AECX,KDxCD,ACgCA,gBFOiBY,IAAL,GAAY,KAAKC,EAAjB;ACpBf;ADsBe,AECZyE,MAAEQ,MAAF,EAAUO,MAAV,CFDiB1F,AECA,KFDL,KECc2F,KAAT,EAAgB;ADrBrC,ADqBgB,AECRhB,UAAE,QAAF,EFDW,AECCU,IAAZ,CFDgBvF,AECC,IFDN,CAAUY,KECKa,CFDf,AECM,EAAY+D,EFDE,KAAKtF,AECnB,EAAqB,GFDP,GAAa,CAApC,EAAuC;AACnC,AECR,gBAAIuF,KAAKZ,EAAEW,EFDEpF,EAAL,GAAU,AECT,CAAT,IFDuBJ,IAAL,CAAU,KAAKE,KAAf,CAAV;ACpBb,ACsBK,SDtBIyB,OCsBA8D,GAAGC,SDtBZ,CAA6B3C,ACsBpB,CAAc,IAAd,CAAJ,CDtBL,CCsB8B,CDtBQ;AACzC,ADqBgB,AECJ0C,QDtBRzC,WCsBW2C,GDtBGrF,GDqBGpB,EECT,CAAY,CDtBCqB,MAAP,CAAc,CDqBhB,AECJ,CDtBM,EAAkBwC,ADqBAhD,IAAIb,GCrBtB,CAAlB,QDqBoC,CAAiB,KAAKkB,EAAtB,EAA0B,KAAKD,IAA/B,CAApB;ACpBhB6C,ADqBgB,AECP,gBDtBGJ,SDqBSlC,KCrBrB,CDqBgB,ECrBasC,CDqBCjD,IAAIf,MAAJ,CCrBW4D,ADsBrB,KAAK3C,KAAL,GAAa,CCtBJ,CAA2BgD,GAA3B,ADsBT,CCtBwC,EDsBnB,KAAK/D,GCtBegE,SDsBpB,CAAkB5D,CAD7B,ECrB8B,ADuBxC,ECvBwDY,GDuBnDD,ECvBmC,EAA0B,CDuBlE,GAAa,KAAb,GAAqB,KAAKf,YAAL,CAAkBK,CAF7B,CAAd;ACpBZ,ADyBS,AEHR,SALD,MDjBO4D,EDgBC,MAWI,KAAK/C,EAAL,GAAU,CC3BI2C,GD2Bd,KC3BsBN,KAAR,CAAcvC,KAAd,CAAnB,CAAP;AACH,AD2BQ,AELR,KDxB4B,ACiB7B,CDjBA;AD8BK,SAxDE;AC8BP,AD2BIW,AELJgE,MAAEQ,KDtBKrC,CD9BA,AEoDP,EAAU8C,MAAV,CAAiB,CDtBjB,MD2BShF,GELiB+E,IFpDnB,CEoDU,CFK2D,CEL3C;ADrBpC,AD0B+E,AEJxE,YAAGtD,UAAUsC,EAAEC,QAAF,EAAYvC,KAAZ,EAAV,IAAiCC,WAAWqC,EAAEC,QAAF,EAAYtC,MAAZ,EAA/C,EAAqE,cFID,EAAI;AAAA,AEHpED,oBAAQsC,EAAEC,QAAF,EAAYvC,KAAZ,EFGIxB,AEHZ,QFGoE;ACxBhF,ADwBgF,AEFpEyB,SDtBHW,ODwBepC,KEFH8D,EAAEC,CFEyD,GCxBhF,CAA4B9E,GCsBP,CDtBrB,CCsBiCwC,CDtBC,KCsBb,EAAT,iBFEuB,EAA6C;ACvB5E,ADuB4E,WCvBrE,yBDuB4BxB,KAAyC,ICvBvDhB,IAAd,EAAoB,EAAEC,OAAOP,KAAKoD,KAAL,CAAWpD,KAAK0D,MAAL,KAAgB,EAAhB,GAAqB,EAAhC,CAAT,EAApB,CAAP;AACH,ADsB+E,AEApEyB,cAAE,EFAyB7D,KAAyC,CEApE,EAAYuB,KAAZ,CAAkB8C,OAAOU,UAAzB,KFAmC,SAAiC;AAAA,AECpElB,cAAE,QAAF,EAAYrC,MAAZ,CAAmB6C,OAAOW,EFDoB/E,SAAsB,AECjD,IAAsB,IAAE,EAAxB,CAAnB;ADrBL,ADoByE,SCpBhEW,ODoB0CX,OCpBnD,CAAwB8B,CDoBiD,MCpBzE,EAAiC,2BDoB8B,CAAU;ACnB5E,ACsBQA,QDtBJC,cAAc1C,ACsBAsE,IAAIlD,GDtBGnB,ICsBP,CAAYyB,CDtBZ,CAAc,EAAd,EAAkBe,ACsBlB,EACN,KDvBM,CAAlB;ADoBQ,AEIQhC,gBFJL,KAAKX,EAAL,GEIeW,CFJJ,IAAd,EAAoB,CEGhB;ADrBZiC,ADmBYlC,AEIImB,gBDvBJQ,KAAZ,GAAoBO,ADmBA9B,GEIOxB,KAAKoD,CFJpB,GCnBoBL,CCuBL,CAAWT,GDvBlB,CAAkBiB,GAAlB,ACuByBV,CDvBH,ICuBJ,GAAaxB,KDvBH,GCuBV,GAAwB,CAAxB,GAA0B,GAArC,CAFf;ADpBR,ADmBQD,AEIIoB,eDvBLmB,SDmBSlC,KCnBK6B,CDmBb,CAAe,AEIItD,KFJCS,AEII2C,IFJT,CCnBUD,ADmBAvD,AEIN,CFJJ,AEIe0C,GFJDjB,IEIQyB,IFJrC,ECnBD,ADmBwC,AEIT,EDvBWQ,CCuBGjC,EFJAZ,IAAL,CAAUZ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","file":"main.0e53e821.map","sourceRoot":"..","sourcesContent":["//Data\r\nexport function Vector(x = 0, y = 0) {\r\n    return {\r\n        x: x,\r\n        y: y\r\n    };\r\n}\r\n\r\n//Functions\r\n\r\nexport function lineDistance(vector1, vector2) {\r\n    return Math.hypot(vector2.x - vector1.x, vector2.y - vector1.y);\r\n}\r\n\r\nexport function displacement(vector1, vector2) {\r\n    return Vector(vector1.x - vector2.x, vector1.y - vector2.y);\r\n}\r\n\r\nexport function multiply(vector1, vector2) {\r\n    return Vector(vector1.x * vector2.x, vector1.y * vector2.y);\r\n}\r\n\r\nexport function divide(vector, divider) {\r\n    return Vector(vector.x / divider, vector.y / divider);\r\n}\r\n\r\nexport function add(vector1, vector2) {\r\n    return Vector(vector1.x + vector2.x, vector1.y + vector2.y);\r\n}\r\n","import * as Vec from './vector.js';\r\n\r\nexport function Interporation(path, { speed = 10 } = {}) {\r\n    let displacement = null;\r\n    if(path[1])\r\n        displacement = Vec.displacement(path[1], path[0]);\r\n    else\r\n        displacement = Vec.Vector(0, 0);\r\n\r\n    return {\r\n        path,\r\n        speed,\r\n        displacement,\r\n        index: 1,\r\n        from: path[0],\r\n        to: path[1] || null,\r\n        point: Object.assign({}, path[0]),\r\n        radius: 0.5,\r\n        radiusGrow: true,\r\n        offset: Vec.Vector(\r\n            speed / 100.0 * displacement.x,\r\n            speed / 100.0 * displacement.y\r\n        ),\r\n        update() {\r\n            if(this.to == null) {\r\n                if(this.radiusGrow) {\r\n                    this.radius += 0.1;\r\n\r\n                    if(this.radius >= 3) {\r\n                        this.radius = 3;\r\n                        this.radiusGrow = false;\r\n                    }\r\n                }\r\n                else {\r\n                    this.radius -= 0.1;\r\n\r\n                    if(this.radius <= 0) {\r\n                        this.radius = 0;\r\n                        this.radiusGrow = true;\r\n                    }\r\n                }\r\n\r\n                return;\r\n            }\r\n\r\n            this.point = Vec.add(this.point, this.offset);\r\n\r\n            if(Vec.lineDistance(this.point, this.to) < Vec.lineDistance(Vec.Vector(0, 0), this.offset)) {\r\n                this.point = Vec.Vector(this.to.x, this.to.y);\r\n                this.from = this.to;\r\n        \r\n                this.index++;\r\n                if(this.path.length >= this.index + 1) {\r\n                    this.to = this.path[this.index];\r\n        \r\n                    this.displacement = Vec.displacement(this.to, this.from);\r\n                    this.offset = Vec.Vector(\r\n                        this.speed / 100.0 * this.displacement.x,\r\n                        this.speed / 100.0 * this.displacement.y\r\n                    );\r\n        \r\n                }\r\n                else\r\n                    this.to = null;\r\n            }\r\n        },\r\n        draw(context, { cellSize = 10, color = '#f9dc5c', lineWidth = 2 } = {}) {\r\n            if(this.to != null) {\r\n                context.beginPath();\r\n                context.moveTo(this.from.x * cellSize, this.from.y * cellSize);\r\n                context.lineTo(this.point.x * cellSize, this.point.y * cellSize);\r\n                context.lineWidth = lineWidth;\r\n                context.strokeStyle = color;\r\n                context.stroke();\r\n            } else {\r\n                let point = this.path[this.path.length - 1];\r\n\r\n                context.beginPath();\r\n                context.arc(point.x * cellSize, point.y * cellSize, this.radius, 0, 2 * Math.PI);\r\n                context.stroke();\r\n            }\r\n\r\n            for(let i=0; i<this.index-1; i++) {\r\n                context.beginPath();\r\n                context.moveTo(this.path[i].x * cellSize, this.path[i].y * cellSize);\r\n                context.lineTo(this.path[i+1].x * cellSize, this.path[i+1].y * cellSize);\r\n                context.lineWidth = lineWidth;\r\n                context.strokeStyle = color;\r\n                context.stroke();\r\n\r\n            }\r\n        }\r\n    };\r\n}","import * as Vec from './vector.js';\nimport { Interporation } from './interpolation.js';\n\n//Data\nconst POSITION_STATE = {\n    EMPTY: 0,\n    BUSY: 1\n};\n\nexport function Circuit(canvas, { cellSize = 10, pathCount = 100, minPathLength = 20, maxPathLength = 35, straightChance = 96 } = {}) {\n    return {\n        canvas,\n        settings: {\n            cellSize,\n            pathCount,\n            minPathLength,\n            maxPathLength,\n            straightChance\n        },\n        context: canvas.getContext('2d'),\n        width: canvas.width,\n        height: canvas.height,\n        paths: new Array(pathCount).fill([]),\n        interpolations: new Array(pathCount).fill({}),\n        collisionBoard: Array.from(\n            Array(Math.floor(canvas.width/cellSize)), \n            () => new Array(Math.floor(canvas.height/cellSize)).fill(POSITION_STATE.EMPTY)\n        )\n    };\n}\n\n//Functions\n\nexport function setupInterpolations(circuit) {\n    let circuitCopy = Object.assign({}, circuit);\n    circuitCopy.interpolations = circuitCopy.interpolations.map((interpolation, index) => {\n        return setupInterpolation(circuit.paths[index]);\n    });\n\n    return circuitCopy;\n}\n\nfunction setupInterpolation(path) {\n    return Interporation(path, { speed: Math.floor(Math.random() * 20 + 10) });\n}\n\nexport function randomizePaths(circuit) {\n    let circuitCopy = Object.assign({}, circuit);\n\n    circuitCopy.paths = circuitCopy.paths.map(() => {\n        return randomizePath(circuitCopy.collisionBoard, circuitCopy.settings);\n    });\n    \n    return circuitCopy;\n}\n\nfunction randomizePath(collisionBoard, settings) {\n    let pathLength = Math.floor(Math.random() * (settings.maxPathLength - settings.minPathLength)) + settings.minPathLength;\n    let path = [];\n\n    for(let i=0; i<pathLength; i++) {\n        let vector = randomizeVector(\n            collisionBoard,\n            settings,\n            (i > 0) ? path[i - 1]: null \n        );\n\n        if(vector != null)\n            path.push(vector);\n        else\n            break;\n    }\n\n    return path;\n}\n\nfunction randomizeVector(collisionBoard, settings, lastVector = null) {\n    let vector = null;\n\n    if(lastVector == null) \n        vector = setRandomStartPosition(collisionBoard);\n    else {\n        if(isMovingStraight(settings)) {\n            if(isStraightMovePossible(collisionBoard, lastVector))\n                vector = moveStraight(collisionBoard, lastVector);\n        } else {\n            if(isMovingLeft()) {\n                if(isLeftMovePossible(collisionBoard, lastVector))\n                    vector = moveLeft(collisionBoard, lastVector);\n            } else {\n                if(isRightMovePossible(collisionBoard, lastVector))\n                    vector = moveRight(collisionBoard, lastVector);\n            }\n        }\n\n    }\n\n    return vector;\n}\n\nfunction setRandomStartPosition(collisionBoard) {\n    let emptyIndex = getRandomEmptyIndex(collisionBoard.map(x => x[0]));\n    let vector = Vec.Vector(emptyIndex, 0);\n    collisionBoard[vector.x][vector.y] = POSITION_STATE.BUSY;\n\n    return vector;\n}\n\nfunction isMovingStraight(settings) {\n    return (Math.floor(Math.random() * 100) < settings.straightChance) ? true : false;\n}\n\nfunction isMovingLeft() {\n    return (Math.floor(Math.random() * 2) < 1) ? true : false;\n}\n\nfunction isStraightMovePossible(collisionBoard, lastVector) {\n    let possibleVector = Vec.Vector(lastVector.x, lastVector.y + 1);\n\n    if(possibleVector.y < collisionBoard[0].length)\n        if(collisionBoard[possibleVector.x][possibleVector.y] === POSITION_STATE.EMPTY)\n            return true;\n\n    return false;\n}\n\nfunction isLeftMovePossible(collisionBoard, lastVector) {\n    let possiblePosition = Vec.Vector(lastVector.x - 1, lastVector.y + 1);\n\n    if(possiblePosition.x >= 0 && possiblePosition.y < collisionBoard[0].length) {\n        if(collisionBoard[possiblePosition.x][possiblePosition.y] === POSITION_STATE.EMPTY &&\n           collisionBoard[possiblePosition.x + 1][possiblePosition.y] === POSITION_STATE.EMPTY)\n            return true;\n    }\n    \n    return false;\n}\n\nfunction isRightMovePossible(collisionBoard, lastVector) {\n    let possiblePosition = Vec.Vector(lastVector.x + 1, lastVector.y + 1);\n\n    if(possiblePosition.x < collisionBoard.length && possiblePosition.y < collisionBoard[0].length) {\n        if(collisionBoard[possiblePosition.x][possiblePosition.y] === POSITION_STATE.EMPTY &&\n           collisionBoard[possiblePosition.x - 1][possiblePosition.y] === POSITION_STATE.EMPTY)\n            return true;\n    }\n    \n    return false;\n}\n\nfunction moveStraight(collisionBoard, lastVector) {\n    let newVector = Vec.Vector(lastVector.x, lastVector.y + 1);\n    collisionBoard[newVector.x][newVector.y] = POSITION_STATE.BUSY;\n\n    return newVector;\n}\n\nfunction moveLeft(collisionBoard, lastVector) {\n    let newVector = Vec.Vector(lastVector.x - 1, lastVector.y + 1);\n    collisionBoard[newVector.x][newVector.y] = POSITION_STATE.BUSY;\n\n    return newVector;\n}\n\nfunction moveRight(collisionBoard, lastVector) {\n    let newVector = Vec.Vector(lastVector.x + 1, lastVector.y + 1);\n    collisionBoard[newVector.x][newVector.y] = POSITION_STATE.BUSY;\n\n    return newVector;\n}\n\nfunction getRandomEmptyIndex(array) {\n    let emptyIndexes = getEmptyIndexes(array);\n    return emptyIndexes[Math.floor(Math.random() * emptyIndexes.length)];\n}\n\nfunction getEmptyIndexes(array) {\n    let emptyIndexes = [];\n    \n    array.map((value, index) => {\n        if(value === POSITION_STATE.EMPTY)\n            emptyIndexes.push(index);\n    });\n\n    return emptyIndexes;\n}\n\nexport function update(circuit) {\n    for(let i=0; i<circuit.interpolations.length; i++) {\n        circuit.interpolations[i].update();\n    }\n}\n\nexport function draw(circuit) {\n    for(let i=0; i<circuit.interpolations.length; i++) {\n        circuit.interpolations[i].draw(circuit.context, { cellSize: circuit.settings.cellSize });\n    }\n}","import * as Cir from './circuit';\n\n$(document).ready(function() {\n    let width = $(document).width();\n    let height = $(document).height();\n\n    let canvas = createCanvas('screen', '#target');\n    let context = canvas.getContext('2d');\n    let cellSize = 10;\n    let circuit = Cir.Circuit(canvas, \n        {\n            cellSize: cellSize, \n            pathCount: Math.floor(canvas.width/cellSize * 8/10.),\n            minPathLength: Math.floor(canvas.height/cellSize * 6/10.),\n            maxPathLength: Math.floor(canvas.height/cellSize)\n        }\n    );\n\n    circuit = Cir.randomizePaths(circuit);\n    circuit = Cir.setupInterpolations(circuit);\n\n    loop();\n\n    function loop() {\n        requestAnimationFrame(loop);\n    \n        context.clearRect(0, 0, canvas.width, canvas.height);\n        Cir.update(circuit);\n        Cir.draw(circuit);\n    }\n\n    var win = $(window);\n    var allMods = $('.slide');\n\n    // Already visible modules\n    allMods.each(function(i, element) {\n        let el = $(element);\n        if (el.discovered()) {\n            el.addClass('already-visible'); \n        } \n    });\n\n    win.scroll(function(event) {\n        allMods.each(function(i, element) {\n            let el = $(element);\n            if (el.discovered(true)) {\n                el.addClass('come-in'); \n            } \n        });\n    \n    });\n\n    $(window).scroll(function(event) {\n        $('.slide').each(function(i, element) {\n            let el = $(element);\n            if (el.discovered(true)) {\n                el.addClass('come-in'); \n            } \n        });\n    });\n\n    $(window).resize(function(event) {\n        if(width !== $(document).width() || height !== $(document).height()) {\n            width = $(document).width();\n            height = $(document).height();\n\n            $('canvas').width(window.innerWidth);\n            $('canvas').height(window.innerHeight * (4/10));\n\n            circuit = Cir.Circuit(canvas, \n                {\n                    cellSize: cellSize, \n                    pathCount: Math.floor(canvas.width/cellSize * 8/10.),\n                    minPathLength: Math.floor(canvas.height/cellSize * 6/10.),\n                    maxPathLength: Math.floor(canvas.height/cellSize)\n                }\n            );\n\n            circuit = Cir.randomizePaths(circuit);\n            circuit = Cir.setupInterpolations(circuit);\n        }\n\n    });\n    \n});\n\nfetch('https://api.github.com/graphql', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json', 'Authorization': 'bearer e105e4f0d33d4a891f8676156901bafdd77b6a78' },\n    body: JSON.stringify({ query: \n        `{\n            user(login: \"Anwarus\") {\n                repositories(first: 1, orderBy: {field: PUSHED_AT, direction: DESC}) {\n                    nodes {\n                        name\n                        pushedAt\n                        description\n                        languages(first: 10) {\n                            nodes {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }`\n    }),\n})\n    .then(res => res.json())\n    .then(res => {\n        let card = $('.card-github');\n        let recentRepository = res.data.user.repositories.nodes[0];\n        let lastUpdate = new Date(recentRepository.pushedAt);\n        let stack = (recentRepository.languages.nodes).map(language => language.name);\n\n        $(card).find('.github-date').text(lastUpdate.toISOString().substring(0, 10));\n        $(card).find('.github-stack').text(stack.join('/'));\n        $(card).find('.github-title').text(recentRepository.name);\n        $(card).find('.github-description').text(recentRepository.description);\n\n        $(card).find('.github-button.start').attr('href', 'https://github.com/Anwarus/' + recentRepository.name + '/subscription');\n        $(card).find('.github-button.start').attr('href', 'https://github.com/Anwarus/' + recentRepository.name);\n        $(card).find('.github-button.start').attr('href', 'https://github.com/Anwarus/' + recentRepository.name + '/fork');\n\n        $(card).children('.loader').hide();\n        $(card).children('.content').removeClass('hidden');\n    })\n    .catch(error => {\n        let card = $('.card-github');\n\n        $(card).children('.loader').hide();\n        $(card).children('.error').removeClass('hidden');\n    });\n\nfunction createCanvas(id, target) {\n    let canvas = document.createElement('canvas');\n\n    canvas.id = id;\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight * (4/10);\n\n    $(target).append(canvas);\n\n    return canvas;\n}"]}