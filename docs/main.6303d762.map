{"version":3,"sources":["js\\vector.js","js\\interpolation.js","js\\circuit.js","js\\main.js"],"names":["Vector","lineDistance","displacement","multiply","divide","add","x","y","vector1","vector2","Math","hypot","vector","divider","Interporation","Vec","path","speed","index","from","to","point","Object","assign","radius","radiusGrow","offset","update","length","draw","context","cellSize","color","lineWidth","beginPath","moveTo","lineTo","strokeStyle","stroke","arc","PI","i","Circuit","setupInterpolations","randomizePaths","POSITION_STATE","EMPTY","BUSY","canvas","pathCount","minPathLength","maxPathLength","straightChance","settings","getContext","width","height","paths","Array","fill","interpolations","collisionBoard","floor","circuit","circuitCopy","map","interpolation","setupInterpolation","random","randomizePath","pathLength","randomizeVector","push","lastVector","setRandomStartPosition","isMovingStraight","isStraightMovePossible","moveStraight","isMovingLeft","isLeftMovePossible","moveLeft","isRightMovePossible","moveRight","emptyIndex","getRandomEmptyIndex","possibleVector","possiblePosition","newVector","array","emptyIndexes","getEmptyIndexes","value","Cir","$","document","ready","createCanvas","loop","requestAnimationFrame","clearRect","win","window","allMods","each","element","el","discovered","addClass","scroll","event","resize","innerWidth","innerHeight","fetch","method","headers","body","JSON","stringify","query","then","res","json","console","log","data","card","recentRepository","user","repositories","nodes","lastUpdate","Date","pushedAt","stack","languages","language","name","find","text","toISOString","substring","join","description","attr","children","hide","removeClass","catch","error","id","target","createElement","append"],"mappings":";;;;;;QACgBA,SAAAA;QASAC,eAAAA;QCRAa,ADYAZ,eAAAA,CCZAY;AEFhB,QHkBgBX,WAAAA;AClBhB,QCSgBuC,AFaAtC,SAAAA,CEbAsC;ICTJkD,IDiCIjD,AFPAtC,MAAAA,gBEOAsC;AFjChB,ICAY5B,IC8CI6B,iBAAAA;AF7CT,QE0LSjB,CF1LA3B,MAAT,EE0LS2B,CF1LqB;AAAA,QEgMrBE,AFhMOvB,CAAc,MEgMrBuB,iEFhMW,CAAU;AGCrCgE,AHDqC,EGCnCC,MHD4BvF,CAAO,CGCrC,EAAYwF,KAAZ,CAAkB,YAAW,kDHDK,CAAG;AEDrC,ADEO,AECH,QAAI/C,CFDQlC,QECCkF,KFDV,CAAuBhF,IAAvB,EAAkD,CEC3B,QAAb,EAAuB,SAAvB,CAAb;AFDqD,AEErD,AHFA,QGEIc,GHFG,OGEOkB,OAAOM,UAAP,CAAkB,IAAlB,CAAd,0CFFiD,EAAI;AAAA,AEGrD,AHFIhD,IEHIS,ICKJgB,GHFGzB,CADA,OGGQ,EAAf,KFHkCW,KAAmB;AAAA,AEIrD,AHFIV,QCF8BU,AEI9B8C,GHFGxD,ECF8C,KEIvCqF,IAAIlD,OAAJ,CAAYM,MAAZ,EACV,KFLsC,EAAW;ACDzD,ACOYjB,AHND,KAAP,aGMkBA,QADd;AFJJ,AEMQkB,AHHX,QCHO/C,WEMeQ,IFNA,CEMKoD,GFNxB,EEMmB,CAAWd,OAAOO,KAAP,GAAaxB,QAAb,GAAwB,CAAxB,GAA0B,GAArC,CAFf;AFHJ,AEMQmB,QFNLlC,KAAK,CAAL,CAAH,EACId,MEKmBQ,KAAKoD,IFLT/C,CEKI,CAAWiC,EFLX9C,KEKkBsD,MAAP,CFLf,CAAiBxC,CEKYe,IFLP,CAAL,CAAjB,EAA0Bf,AEKX,GAAyB,CAAzB,CFLgB,CAAL,CAA1B,AEK0C,CFLzD,CADJ,CEMuB,CAHnB,GFAAd,eAAea,IAAIf,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAf;AEIImD,AHHZ,uBGG2BzC,KAAKoD,KAAL,CAAWd,OAAOQ,MAAP,GAAczB,QAAzB;ADR3B,ADMI,AEFI,KADU,CAAd,KFGO;ACLX,ADMQf,ADAD,IEND6B,KFMU5C,SCDL,GCLY,AFMhB,CAAsBO,OAAtB,EAA+BC,OAA/B,EAAwC;AEL3CqC,ADMI7B,AEIJ8C,AHJA,WENO,AFMArD,CEPY,ECWTkF,EHJEjF,EGIEiC,EFNP,CDEA,CAAWnC,QAAQH,CAAR,CGIR,CAAmByD,CHJCvD,MGIpB,CAAV,CHJsCF,CAA/B,EAAkCG,QAAQF,CAAR,GAAYC,QAAQD,CAAtD,CAAP;AELAwC,ADMI7C,AEIJ6D,AHJH,UENS,ICUI6B,IAAIjD,gBFPP,GEOG,CAAwBoB,OAAxB,CAAV;ADZmB,ADSf7C,CCTR,cDSe,CAJJ;AAKHC,AEIJ8E,AHJG,SAAS/F,KCAFc,KAAK,CAAL,CALH,ADKJ,CAAsBR,OAAtB,EAA+BC,OAA/B,EAAwC;AELxC,ADMCW,ADAJ,SENYsB,EFML1C,CCACgB,ICNL,CAAiBgC,ADMP,CAAL,ADAMxC,KENX,ADMgB,ECN+G,CFM5GF,CCNf,ADMO,GAAYG,QAAQH,CAA3B,EAA8BE,QAAQD,CAAR,GAAYE,QAAQF,CAAlD,CAAP;AENkI,ADO9Hc,AEIJ,AHJH,aGIY4E,EFJE3E,EEIX,GAAgB,EFJEC,MAAP,CAAc,EAAd,EAAkBP,KAAK,CAAL,CAAlB,CAPJ,0CCAuH,EAAI;AAAA,ADQ9HQ,AEIA0E,gBFJQ,GARL,UCAuBnE,CCYJkE,IAAtB,GDZ8H;AAAA,ADS9HxE,ADAD,QET2BM,CFSlB5B,OETsH,CFS/H,CAAkBK,ECAL,IATT,CDSJ,EAA2BC,OAA3B,EAAoC,aETE,EAAyF;AAAA,ADU9HiB,AEIAI,AHJJ,WAAO9B,KCAKe,AEIAoF,EHJE3F,ECAER,KEIZ,CFJQ,AEIU,AHJAM,CCCdW,AEGJ,AHJU,EGIW,CDdoBgC,ACczC,AHJsBxC,EGIEuC,GFHZ,GDDkB1C,CEVgG,ACc/FiD,AHJ5B,CCCC,CDD6B/C,ECCbN,CEGpB,EAAsC8C,GHJGzC,CAAR,GGIYiD,AHJA/C,GCCZH,CADzB,EAEJW,AEEJ,EHJqDV,CAAlD,CAAP,ICEgB,KAAR,GAAgBL,aAAaK,CAFzB,CAVL;ACA2H,ADc9HoB,AECAiE,AHJP,QEXgD3C,ICerCtB,EFfD,GCA2H,CCe9H,CAAWoC,OAAX,QFDS,iBCd4C,GAAyE;AAAA,ADe1H,AECJ6B,YAAI/D,IFDG,AECP,CAASkC,IFDG3C,EAAL,CECP,GFDkB,IAAd,EAAoB,CCfkC8B,aAAoE;AAAA,ADgBtH,AECX,AHJE,QEb2DA,CFalD9C,MAAT,CAAgBQ,ICGJ,CChBmH,CFa/H,EAAwBC,CCGPY,MDHjB,EAAiC,ECGxB,EAAoB,sBChB8C,EAAoD;AAAA,ADiBlH,ADHhB,WAAOzB,OAAOY,OCGOY,ADHAlB,CAAP,GAAWO,ECGT,GCjBkEsC,CDiBnD,CDHxB,ECGS,ADHkBvC,OAAOL,CAAP,CEdgG,EFcrFM,OAAtC,CAAP;AEdkI,ACmBlI,AHJH,QEfqFsC,ACmB9EiD,MAAMP,EAAEQ,KDnBsH,CCmBxH,CAAV,oCDnBkG,EAAgC;AAAA,ADmBlH,AEChB,QAAIC,UAAUT,EAAE,IFDG,IECL,CFDUrE,AECxB,MDpBsG4B,ADmBnF,IAAe,CAAlB,EAAqB,OCnB6F;AAAA,ADoB9G,ADHjB,QEjBmGA,CFiB1F/C,GAAT,CAAaG,OAAb,EEjB+H,AFiBzGC,OCGAe,ADHtB,EAA+B,ICGd,GAAc,CAAd,sBCpBmG,EAAW;ADqB9G,AECpB,AHJA,WAAOxB,OAAOQ,QAAQF,CAAR,ECGWmB,CDHChB,QAAQH,CCGd,ADHb,EAA8BE,CCGC,KAAlB,EDHyBD,CAAR,GAAYE,QAAQF,CAAlD,CAAP;AEjBA,ADqBiB,AECjB+F,AHJH,WElBU,CCsBCC,IAAR,CAAa,UAAS9D,CAAT,EAAY+D,OAAZ,EAAqB;ADrB9BxD,ADqBS,AECT,YAAIyD,KFRI,AEQCZ,EAAEW,GDvBR,CDuBU,GEAJ,CAAT;ADrBAnD,ADsBY,AEAZ,YAAIoD,GAAGC,GDtBG,ODsBOlF,AEAb,EAAJ,EAAqB,EFAT,IAAe,GAAf;ACrBRO,ACsBA0E,eAAGE,QAAH,CAAY,MDvBN,WCuBN;ADrBA1D,ADsBQ,AEAX,wBFAc,KAAKzB,GCxBV,GDwBK,IAAe,CAAlB,EAAqB;ACrB7B0B,ADsBY,AEAnB,KALD,wBFKyB1B,MAAL,GAAc,CAAd,CCzBN;AAIN2B,ADsBY,6BAAK1B,UAAL,CC1BN,ED0BwB,IAAlB;ACrBZ2B,ADsBS,AEAjBgD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,kBAAU6B,IAAIlD,OAAJ,CAAYM,MAAZ,EACN,sDFGgE,EAAI;AAAA,AEFhEjB,sBAAUA,QADd,SFGYA,QAAwD;ACxBhF,ADwBgF,AEDhEkB,SDvBPkB,ODwBepC,OEDGrB,CFCqD,GCxBhF,CAA4BM,ACuBI8C,IDvBhC,CCuB2B,CDvBO,ACuBId,OAAOO,KAAP,GAAaxB,QAAb,CFCH,EAA6C,AEDlB,CAAxB,GAA0B,GAArC,CAFf;ADpBR,ADuB4E,AEAhEmB,WDvBL,gBCuBoBxC,KAAKoD,IFAG9B,CEAR,CAAWgB,GFAsC,ICvBvDhC,ACuBwBwC,IDvBtC,EAAoB,ACuBW,EDvBTvC,CCuBuBc,MDvBhBrB,ECuBE,GDvBGoD,ACuBsB,CAAzB,GAA2B,CDvB7B,CAAWpD,CCuBpB,CAHnB,GDpB4C0D,MAAL,KAAgB,EAAhB,GAAqB,EAAhC,CAAT,EAApB,CAAP;AACH,ADsB+E,AEChEjB,gBFDuBnB,KAAyC,MECjDtB,KAAKoD,KAAL,CAAWd,OAAOQ,MAAP,CFDK,EECSzB,OFDwB,CECjD;AFDiD,AEHpE,SADM,CAAV,8BFIkDE,SAAsB;ACpBzE,ADoByE,SCpBhEW,ODoB0CX,OCpBnD,CAAwB8B,CDoBiD,MCpBzE,EAAiC,2BDoB8B,CAAU;ACnB5E,ACwBIA,QDxBAC,UCwBU4B,IDxBItE,ACwBAsB,ODxBOrB,MAAP,CAAc,ACwBlB,CAAmBwC,CDxBf,EAAkBA,ICwBtB,CAAV,EDxBc,CAAlB;ADoBQ,AEKJA,gBFLO,EEKG6B,GFLExE,CEKEuB,CFLP,IAAW,IAAd,EAAoB,QEKd,CAAwBoB,OAAxB,CAAV;ADvBJC,ADmBYlC,AEKX,KAfD,WDTY2B,KAAZ,GAAoBO,ADmBA9B,SAAR,GCnBoBuB,KAAZ,CAAkBQ,GAAlB,CAAsB,YAAM;AAC5C,ADmBQnC,AEMf,CAzED,cDgDeuC,SDmBSlC,KCnBK6B,CDmBb,CAAe,KAAK7C,IAAL,CCnBU0C,ADmBAvD,CAAV,GAAcyB,QAA7B,ECnBD,ADmBwC,ECnBEiC,GDmBG7C,IAAL,CAAUZ,CAAV,GCnBc8C,ADmBAtB,QCnBtD,ADmBC,CCnBR;AACH,ADmBWD,KCrB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","file":"main.6303d762.map","sourceRoot":"..","sourcesContent":["//Data\r\nexport function Vector(x = 0, y = 0) {\r\n    return {\r\n        x: x,\r\n        y: y\r\n    };\r\n}\r\n\r\n//Functions\r\n\r\nexport function lineDistance(vector1, vector2) {\r\n    return Math.hypot(vector2.x - vector1.x, vector2.y - vector1.y);\r\n}\r\n\r\nexport function displacement(vector1, vector2) {\r\n    return Vector(vector1.x - vector2.x, vector1.y - vector2.y);\r\n}\r\n\r\nexport function multiply(vector1, vector2) {\r\n    return Vector(vector1.x * vector2.x, vector1.y * vector2.y);\r\n}\r\n\r\nexport function divide(vector, divider) {\r\n    return Vector(vector.x / divider, vector.y / divider);\r\n}\r\n\r\nexport function add(vector1, vector2) {\r\n    return Vector(vector1.x + vector2.x, vector1.y + vector2.y);\r\n}\r\n","import * as Vec from './vector.js';\r\n\r\nexport function Interporation(path, { speed = 10 } = {}) {\r\n    let displacement = null;\r\n    if(path[1])\r\n        displacement = Vec.displacement(path[1], path[0]);\r\n    else\r\n        displacement = Vec.Vector(0, 0);\r\n\r\n    return {\r\n        path,\r\n        speed,\r\n        displacement,\r\n        index: 1,\r\n        from: path[0],\r\n        to: path[1] || null,\r\n        point: Object.assign({}, path[0]),\r\n        radius: 0.5,\r\n        radiusGrow: true,\r\n        offset: Vec.Vector(\r\n            speed / 100.0 * displacement.x,\r\n            speed / 100.0 * displacement.y\r\n        ),\r\n        update() {\r\n            if(this.to == null) {\r\n                if(this.radiusGrow) {\r\n                    this.radius += 0.1;\r\n\r\n                    if(this.radius >= 3) {\r\n                        this.radius = 3;\r\n                        this.radiusGrow = false;\r\n                    }\r\n                }\r\n                else {\r\n                    this.radius -= 0.1;\r\n\r\n                    if(this.radius <= 0) {\r\n                        this.radius = 0;\r\n                        this.radiusGrow = true;\r\n                    }\r\n                }\r\n\r\n                return;\r\n            }\r\n\r\n            this.point = Vec.add(this.point, this.offset);\r\n\r\n            if(Vec.lineDistance(this.point, this.to) < Vec.lineDistance(Vec.Vector(0, 0), this.offset)) {\r\n                this.point = Vec.Vector(this.to.x, this.to.y);\r\n                this.from = this.to;\r\n        \r\n                this.index++;\r\n                if(this.path.length >= this.index + 1) {\r\n                    this.to = this.path[this.index];\r\n        \r\n                    this.displacement = Vec.displacement(this.to, this.from);\r\n                    this.offset = Vec.Vector(\r\n                        this.speed / 100.0 * this.displacement.x,\r\n                        this.speed / 100.0 * this.displacement.y\r\n                    );\r\n        \r\n                }\r\n                else\r\n                    this.to = null;\r\n            }\r\n        },\r\n        draw(context, { cellSize = 10, color = '#f9dc5c', lineWidth = 2 } = {}) {\r\n            if(this.to != null) {\r\n                context.beginPath();\r\n                context.moveTo(this.from.x * cellSize, this.from.y * cellSize);\r\n                context.lineTo(this.point.x * cellSize, this.point.y * cellSize);\r\n                context.lineWidth = lineWidth;\r\n                context.strokeStyle = color;\r\n                context.stroke();\r\n            } else {\r\n                let point = this.path[this.path.length - 1];\r\n\r\n                context.beginPath();\r\n                context.arc(point.x * cellSize, point.y * cellSize, this.radius, 0, 2 * Math.PI);\r\n                context.stroke();\r\n            }\r\n\r\n            for(let i=0; i<this.index-1; i++) {\r\n                context.beginPath();\r\n                context.moveTo(this.path[i].x * cellSize, this.path[i].y * cellSize);\r\n                context.lineTo(this.path[i+1].x * cellSize, this.path[i+1].y * cellSize);\r\n                context.lineWidth = lineWidth;\r\n                context.strokeStyle = color;\r\n                context.stroke();\r\n\r\n            }\r\n        }\r\n    };\r\n}","import * as Vec from './vector.js';\nimport { Interporation } from './interpolation.js';\n\n//Data\nconst POSITION_STATE = {\n    EMPTY: 0,\n    BUSY: 1\n};\n\nexport function Circuit(canvas, { cellSize = 10, pathCount = 100, minPathLength = 20, maxPathLength = 35, straightChance = 96 } = {}) {\n    return {\n        canvas,\n        settings: {\n            cellSize,\n            pathCount,\n            minPathLength,\n            maxPathLength,\n            straightChance\n        },\n        context: canvas.getContext('2d'),\n        width: canvas.width,\n        height: canvas.height,\n        paths: new Array(pathCount).fill([]),\n        interpolations: new Array(pathCount).fill({}),\n        collisionBoard: Array.from(\n            Array(Math.floor(canvas.width/cellSize)), \n            () => new Array(Math.floor(canvas.height/cellSize)).fill(POSITION_STATE.EMPTY)\n        )\n    };\n}\n\n//Functions\n\nexport function setupInterpolations(circuit) {\n    let circuitCopy = Object.assign({}, circuit);\n    circuitCopy.interpolations = circuitCopy.interpolations.map((interpolation, index) => {\n        return setupInterpolation(circuit.paths[index]);\n    });\n\n    return circuitCopy;\n}\n\nfunction setupInterpolation(path) {\n    return Interporation(path, { speed: Math.floor(Math.random() * 20 + 10) });\n}\n\nexport function randomizePaths(circuit) {\n    let circuitCopy = Object.assign({}, circuit);\n\n    circuitCopy.paths = circuitCopy.paths.map(() => {\n        return randomizePath(circuitCopy.collisionBoard, circuitCopy.settings);\n    });\n    \n    return circuitCopy;\n}\n\nfunction randomizePath(collisionBoard, settings) {\n    let pathLength = Math.floor(Math.random() * (settings.maxPathLength - settings.minPathLength)) + settings.minPathLength;\n    let path = [];\n\n    for(let i=0; i<pathLength; i++) {\n        let vector = randomizeVector(\n            collisionBoard,\n            settings,\n            (i > 0) ? path[i - 1]: null \n        );\n\n        if(vector != null)\n            path.push(vector);\n        else\n            break;\n    }\n\n    return path;\n}\n\nfunction randomizeVector(collisionBoard, settings, lastVector = null) {\n    let vector = null;\n\n    if(lastVector == null) \n        vector = setRandomStartPosition(collisionBoard);\n    else {\n        if(isMovingStraight(settings)) {\n            if(isStraightMovePossible(collisionBoard, lastVector))\n                vector = moveStraight(collisionBoard, lastVector);\n        } else {\n            if(isMovingLeft()) {\n                if(isLeftMovePossible(collisionBoard, lastVector))\n                    vector = moveLeft(collisionBoard, lastVector);\n            } else {\n                if(isRightMovePossible(collisionBoard, lastVector))\n                    vector = moveRight(collisionBoard, lastVector);\n            }\n        }\n\n    }\n\n    return vector;\n}\n\nfunction setRandomStartPosition(collisionBoard) {\n    let emptyIndex = getRandomEmptyIndex(collisionBoard.map(x => x[0]));\n    let vector = Vec.Vector(emptyIndex, 0);\n    collisionBoard[vector.x][vector.y] = POSITION_STATE.BUSY;\n\n    return vector;\n}\n\nfunction isMovingStraight(settings) {\n    return (Math.floor(Math.random() * 100) < settings.straightChance) ? true : false;\n}\n\nfunction isMovingLeft() {\n    return (Math.floor(Math.random() * 2) < 1) ? true : false;\n}\n\nfunction isStraightMovePossible(collisionBoard, lastVector) {\n    let possibleVector = Vec.Vector(lastVector.x, lastVector.y + 1);\n\n    if(possibleVector.y < collisionBoard[0].length)\n        if(collisionBoard[possibleVector.x][possibleVector.y] === POSITION_STATE.EMPTY)\n            return true;\n\n    return false;\n}\n\nfunction isLeftMovePossible(collisionBoard, lastVector) {\n    let possiblePosition = Vec.Vector(lastVector.x - 1, lastVector.y + 1);\n\n    if(possiblePosition.x >= 0 && possiblePosition.y < collisionBoard[0].length) {\n        if(collisionBoard[possiblePosition.x][possiblePosition.y] === POSITION_STATE.EMPTY &&\n           collisionBoard[possiblePosition.x + 1][possiblePosition.y] === POSITION_STATE.EMPTY)\n            return true;\n    }\n    \n    return false;\n}\n\nfunction isRightMovePossible(collisionBoard, lastVector) {\n    let possiblePosition = Vec.Vector(lastVector.x + 1, lastVector.y + 1);\n\n    if(possiblePosition.x < collisionBoard.length && possiblePosition.y < collisionBoard[0].length) {\n        if(collisionBoard[possiblePosition.x][possiblePosition.y] === POSITION_STATE.EMPTY &&\n           collisionBoard[possiblePosition.x - 1][possiblePosition.y] === POSITION_STATE.EMPTY)\n            return true;\n    }\n    \n    return false;\n}\n\nfunction moveStraight(collisionBoard, lastVector) {\n    let newVector = Vec.Vector(lastVector.x, lastVector.y + 1);\n    collisionBoard[newVector.x][newVector.y] = POSITION_STATE.BUSY;\n\n    return newVector;\n}\n\nfunction moveLeft(collisionBoard, lastVector) {\n    let newVector = Vec.Vector(lastVector.x - 1, lastVector.y + 1);\n    collisionBoard[newVector.x][newVector.y] = POSITION_STATE.BUSY;\n\n    return newVector;\n}\n\nfunction moveRight(collisionBoard, lastVector) {\n    let newVector = Vec.Vector(lastVector.x + 1, lastVector.y + 1);\n    collisionBoard[newVector.x][newVector.y] = POSITION_STATE.BUSY;\n\n    return newVector;\n}\n\nfunction getRandomEmptyIndex(array) {\n    let emptyIndexes = getEmptyIndexes(array);\n    return emptyIndexes[Math.floor(Math.random() * emptyIndexes.length)];\n}\n\nfunction getEmptyIndexes(array) {\n    let emptyIndexes = [];\n    \n    array.map((value, index) => {\n        if(value === POSITION_STATE.EMPTY)\n            emptyIndexes.push(index);\n    });\n\n    return emptyIndexes;\n}\n\nexport function update(circuit) {\n    for(let i=0; i<circuit.interpolations.length; i++) {\n        circuit.interpolations[i].update();\n    }\n}\n\nexport function draw(circuit) {\n    for(let i=0; i<circuit.interpolations.length; i++) {\n        circuit.interpolations[i].draw(circuit.context, { cellSize: circuit.settings.cellSize });\n    }\n}","import * as Cir from './circuit';\n\n$(document).ready(function() {\n    let canvas = createCanvas('screen', '#target');\n    let context = canvas.getContext('2d');\n    let cellSize = 10;\n    let circuit = Cir.Circuit(canvas, \n        {\n            cellSize: cellSize, \n            pathCount: Math.floor(canvas.width/cellSize * 8/10.),\n            minPathLength: Math.floor(canvas.height/cellSize * 6/10.),\n            maxPathLength: Math.floor(canvas.height/cellSize)\n        }\n    );\n\n    circuit = Cir.randomizePaths(circuit);\n    circuit = Cir.setupInterpolations(circuit);\n\n    loop();\n\n    function loop() {\n        requestAnimationFrame(loop);\n    \n        context.clearRect(0, 0, canvas.width, canvas.height);\n        Cir.update(circuit);\n        Cir.draw(circuit);\n    }\n\n    var win = $(window);\n    var allMods = $('.slide');\n\n    // Already visible modules\n    allMods.each(function(i, element) {\n        let el = $(element);\n        if (el.discovered()) {\n            el.addClass('already-visible'); \n        } \n    });\n\n    win.scroll(function(event) {\n        allMods.each(function(i, element) {\n            let el = $(element);\n            if (el.discovered(true)) {\n                el.addClass('come-in'); \n            } \n        });\n    \n    });\n\n    $(window).scroll(function(event) {\n        $('.slide').each(function(i, element) {\n            let el = $(element);\n            if (el.discovered(true)) {\n                el.addClass('come-in'); \n            } \n        });\n    });\n\n    $(window).resize(function(event) {\n        $('canvas').width(window.innerWidth);\n        $('canvas').height(window.innerHeight * (4/10));\n\n        circuit = Cir.Circuit(canvas, \n            {\n                cellSize: cellSize, \n                pathCount: Math.floor(canvas.width/cellSize * 8/10.),\n                minPathLength: Math.floor(canvas.height/cellSize * 6/10.),\n                maxPathLength: Math.floor(canvas.height/cellSize)\n            }\n        );\n\n        circuit = Cir.randomizePaths(circuit);\n        circuit = Cir.setupInterpolations(circuit);\n    });\n    \n});\n\nfetch('https://api.github.com/graphql', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json', 'Authorization': 'bearer e105e4f0d33d4a891f8676156901bafdd77b6a78' },\n    body: JSON.stringify({ query: \n        `{\n            user(login: \"Anwarus\") {\n                repositories(first: 1, orderBy: {field: PUSHED_AT, direction: DESC}) {\n                    nodes {\n                        name\n                        pushedAt\n                        description\n                        languages(first: 10) {\n                            nodes {\n                                name\n                            }\n                        }\n                    }\n                }\n            }\n        }`\n    }),\n})\n    .then(res => res.json())\n    .then(res => {\n        console.log(res.data);\n\n        let card = $('.card-github');\n        let recentRepository = res.data.user.repositories.nodes[0];\n        let lastUpdate = new Date(recentRepository.pushedAt);\n        let stack = (recentRepository.languages.nodes).map(language => language.name);\n\n        $(card).find('.github-date').text(lastUpdate.toISOString().substring(0, 10));\n        $(card).find('.github-stack').text(stack.join('/'));\n        $(card).find('.github-title').text(recentRepository.name);\n        $(card).find('.github-description').text(recentRepository.description);\n\n        $(card).find('.github-button.start').attr('href', 'https://github.com/Anwarus/' + recentRepository.name + '/subscription');\n        $(card).find('.github-button.start').attr('href', 'https://github.com/Anwarus/' + recentRepository.name);\n        $(card).find('.github-button.start').attr('href', 'https://github.com/Anwarus/' + recentRepository.name + '/fork');\n\n        $(card).children('.loader').hide();\n        $(card).children('.content').removeClass('hidden');\n    })\n    .catch(error => {\n        console.log('Error: ', error);\n\n        let card = $('.card-github');\n\n        $(card).children('.loader').hide();\n        $(card).children('.error').removeClass('hidden');\n    });\n\nfunction createCanvas(id, target) {\n    let canvas = document.createElement('canvas');\n\n    canvas.id = id;\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight * (4/10);\n\n    $(target).append(canvas);\n\n    return canvas;\n}"]}